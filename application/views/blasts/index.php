<?php

/**********************************************************************
* Section 1 : pre-processing 
*********************************************************************/

  session_start();
  $CI = & get_instance();

  $action = $_GET['action'];
  $buttons = array();
  
  //append to this string if anything processed before header has output 
  $status = '';
   
  // need to process log in or out requests before anything else
  if($_POST['user']&&$_POST['password'])
  {
    $login = login($_POST['user'], $_POST['password']);
    
	
    if($login == 'admin')
    {
      $status .= "<p><b>".get_real_name($_POST['user']).
                 "</b> logged in"." successfully as <b>Administrator</b></p>
                  <br /><br /><br /><br /><br />";
      $_SESSION['admin_user'] = $_POST['user'];
    }
    else if($login == 'normal')
    {
      $status .= "<p><b>".get_real_name($_POST['user'])."</b> logged in"
                 ." successfully.</p><br /><br />";
      $_SESSION['normal_user'] = $_POST['user'];
    }
    else
    {
      $status .= "<p>Sorry, we could not log you in with that 
                  user address and password.</p><br />";
    }
  }

  if($action == 'log-out')
  {
    unset($action);
    $_SESSION=array();
    session_destroy();
  }

/**********************************************************************
* Section 2: set up and display headers 
*********************************************************************/

  // set the buttons that will be on the tool bar
  if(check_normal_user())
  {
    // if a normal user
    $buttons[0] = 'change-password';
    $buttons[1] = 'account-settings';
    $buttons[2] = 'show-my-lists';
    $buttons[3] = 'show-other-lists';
    $buttons[4] = 'log-out'; 
  }
  else if(check_admin_user())
  {
    // if an administrator
    //$buttons[0] = 'change-password';
    $buttons[0] = 'create-list';
    $buttons[1] = 'create-mail';
    $buttons[2] = 'view-mail';
    $buttons[3] = 'show-all-lists';
    //$buttons[5] = 'show-my-lists';
    //$buttons[6] = 'show-other-lists';
	$buttons[4] = 'log-out';
  }
  else
  {
    // if not logged in at all
    //$buttons[0] = 'new-account'; 
    //$buttons[1] = 'show-all-lists';
    //$buttons[4] = 'log-in';
  }
  
  if($action)
  {
    // display header with application name and description of page or action
    do_html_header('Trimart Email Blasts - '.format_action($action));
  }
  
  else
  {
    // display header with just application name
    do_html_header('Trimart Email Blasts');
  }
  
  display_toolbar($buttons);
  
  
  //display any text generated by functions called before header
  echo $status;

/**********************************************************************
* Section 3: perform action
*********************************************************************/

  // only these actions can be done if not logged in
  switch ( $action )
  {
    case 'new-account' :
    {
      // get rid of session variables
      session_destroy();
      display_account_form();   
      break;
    }
    case 'store-account' :
    {
      if (store_account($_SESSION['normal_user'], 
               $_SESSION['admin_user'], $_POST))
        $action = '';
      if(!check_logged_in())
        display_login_form($action);
      break;
    }
    case 'log-in' :
    case '':
    {
      if(!check_logged_in())
        display_login_form($action);
      break;
    }
    case 'show-all-lists' :
    {
      display_items('All Lists', get_all_lists(), 'information',
                    'show-archive','modify');
      break;
    }
    case 'show-archive' :
    {
      display_items('Archive For '.get_list_name($_GET['id']), 
                     get_archive($_GET['id']), 'view-html', 
                    'view-text', '');
      break;
    }
    case 'information' :
    {
      display_information($_GET['id']);
      break;
    }
	
    
  }
  
  //all other actions require user to be logged in
  if(check_logged_in())
  {
    switch ( $action )
    {
      case 'account-settings' :
      {
        display_account_form(get_user(), 
              get_real_name(get_user()), get_mimetype(get_user()));   
        break;
      }
      case 'show-other-lists' :
      {
        display_items('Unsubscribed Lists', 
                      get_unsubscribed_lists(get_user()), 'information', 
                      'show-archive', 'subscribe');
        break;
      }
      case 'subscribe' :
      {
        subscribe(get_user(), $_GET['id']);
        display_items('Subscribed Lists', get_subscribed_lists(get_user()),
                        'information', 'show-archive', 'subscribe');
        break;
      }
      case 'unsubscribe' :
      {
        unsubscribe(get_user(), $_GET['id']);
        display_items('Subscribed Lists', get_subscribed_lists(get_user()),
                      'information', 'show-archive', 'unsubscribe');
        break;
      }
      //case '':
      case 'show-my-lists' :
      {               
        display_items('Subscribed Lists', get_subscribed_lists(get_user()), 
                     'information', 'show-archive', 'unsubscribe');
        break;
      }
      case 'change-password' :
      {               
        display_password_form();
        break;
      }
      case 'store-change-password' :
      {               
        if(change_password(get_user(), $_POST['old_passwd'], 
           $_POST['new_passwd'], $_POST['new_passwd2']))
        {
          echo '<p>OK: Password changed.</p>
                <br /><br /><br /><br /><br /><br />';
        }
        else
        {
          echo '<p>Sorry, your password could not be changed.</p>';
          display_password_form();
        } 
        break;
      }
    }
  }
  // The following actions may only be performed by an admin user
  if(check_admin_user())
  {
    switch ( $action )
    {
      case 'create-mail' :
      {
        display_mail_form(get_user());   
        break;
      }
      case 'create-list' :
      {
        display_list_form(get_user());   
        break;
      }
      case 'store-list' :
      {
        if(store_list($_SESSION['admin_user'], $_POST))
        {
          echo '<p>New list added</p><br />';
          display_items('All Lists', get_all_lists(), 'information', 
                        'show-archive','');
        }
        else     
          echo '<p>List could not be stored, please try ' 
               .'again.</p><br /><br /><br /><br /><br />';  
                
        break;
      }
	  //192.168.20.202email port:8089
      case 'send' :
      {
        send($_GET['id'], $_SESSION['admin_user'], $_POST['emailtest']);   
        break;
      }
      case 'view-mail' :
      {
        display_items('Unsent Mail', get_unsent_mail(get_user()), 
                      'preview-html', 'preview-text', 'send');
        break;
	  }
		
	case 'subscribe' :
      {
        subscribe(get_user(), $_GET['id']);
        display_items('Subscribed Lists', get_subscribed_lists(get_user()),
                        'information', 'show-archive', 'subscribe');
        break;
      }
      case 'unsubscribe' :
      {
        unsubscribe(get_user(), $_GET['id']);
        display_items('Subscribed Lists', get_subscribed_lists(get_user()),
                      'information', 'show-archive', 'unsubscribe');
        break;
      }
	  
	 case 'modify' :
	  {
		$list = address_book();
		$subscribers = get_subscribers($_GET['id']);
		
?>
		
		<ul class="nav nav-tabs">
			<li class="active"><a data-toggle="tab" href="#menu1">Subscribers</a></li>
			<li ><a onclick="changeAllClass('menu1','tab-pane fade');" data-toggle="tab" href="#home">Address Book</a></li>
		</ul>

		<div class="tab-content">
			<div id="menu1" class="tab-pane fade in active">
				<?php for($i = 0; $i < count($subscribers); $i++)
					{
						echo "<input type='checkbox' style='float:left;' value='".$subscribers[$i][0]."' name='cList[]'/><p>".$subscribers[$i][1]."   ".$subscribers[$i][0]."</p>"; 
										
					}
				?>
			</div>
			<div id="home" class="tab-pane fade">
				<?php 
					echo "<form method='post' action='".base_url()."index.php?action=add-or-remove&id=".$_GET['id']."'>";
					echo "<input type='submit' value='Add to List' name='add'/><input type='submit' value='Remove from List' name='remove'/><br/>";
					for($i = 0; $i < count($list); $i++)
					{
						echo "<input type='checkbox' style='float:left;' value='".$list[$i][1]."' name='cList[]'/><p>".$list[$i][0]."   ".$list[$i][1]."</p>"; 
										
					}
				?>
				</form>
			</div>
		</div>

<?php
		
		
		break;	
	  }
	  
	 case 'add-or-remove':
	 {
		 if($_POST['add'] == 'Add to List')
		 {
			 //$list = address_book();
			$action = '';
			if(!check_admin_user())
				display_login_form($action);
			echo "<p>Added to list</p>";
			
			 if(!empty($_POST['cList']))
			 {
				 foreach($_POST['cList'] as $item)
				 {
					 echo "<p>".$item."</p>";
					subscribe($item, $_GET['id']);			 
				 }
			 }
			 
		 }
			 

		
		if($_POST['remove'] == 'Remove from List')
		{
			$action = '';
			if(!check_admin_user())
				display_login_form($action);
			
			 if(!empty($_POST['cList']))
			 {
				 foreach($_POST['cList'] as $item)
				 {
					 echo "<p>".$item."</p>";
					unsubscribe($item, $_GET['id']);			 
				 }
			 }
		}
		break;
	}
}
	 
		
   }
   

/**********************************************************************
* Section 4: display footer 
*********************************************************************/

  do_html_footer();
?> 